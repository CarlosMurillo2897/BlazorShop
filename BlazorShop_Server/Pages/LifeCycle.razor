@page "/lifecycle"

<h3>LifeCycle</h3>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

<div class="border">
    <_LifeCycleChild CountValue="@currentCount"></_LifeCycleChild>
</div>

<hr />
@foreach (var item in EventType)
{
    @item
    <hr />
}

@code {
    public int currentCount { get; set; }
    List<string> EventType = new List<string>();
    private void IncrementCount() {
        currentCount++;
    }

    protected override void OnInitialized()
    {
        EventType.Add("On Initialized is called.");
    }
    protected override async Task OnInitializedAsync()
    {
        EventType.Add("On OnInitializedAsync is called.");
        await Task.Delay(1000);
    }
    protected override void OnParametersSet()
    {
        EventType.Add("On OnParametersSet is called.");
    }
    protected override async Task OnParametersSetAsync()
    {
        EventType.Add("On OnParametersSetAsync is called.");
        await Task.Delay(1000);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if(firstRender) {
            currentCount = 111;
        }
        else {
            currentCount = 999;
        }
        EventType.Add("On OnAfterRender is called.");
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        EventType.Add("On OnAfterRenderAsync is called.");
    }
}
