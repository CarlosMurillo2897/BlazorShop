@page "/Components/BindProp"
<h2 class="text-success">Individual Product</h2>

<div class="row">
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Playground</h3>
        <hr />
        <div>
            Active: <input type="checkbox" @bind-value="@Product.IsActive" checked="@Product.IsActive" /><br />
        </div>
        <div>
            Price: <input type="number" @bind-value="@Product.Price" @bind-value:event="oninput" /><br />
        </div>
        <div>
            Product Properties:
            <select @bind="selectedProp">
                @foreach (var prop in Product.ProductProperties)
                {
                    <option value="@prop.Key">@prop.Key</option>
                }
            </select>
        </div>
    </div>
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Summary</h3>
        <hr />
        Name: @Product.Name<br />
        Active: @Product.IsActive<br />
        Price: @Product.Price <br />
        This Product is: @(Product.IsActive ? "Active" : "Inactive")<br />
        Property Selected: @selectedProp<br />
        @if (!String.IsNullOrWhiteSpace(selectedProp))
        {
            <p>Property value: @Product.ProductProperties.FirstOrDefault(u => u.Key == selectedProp).Value</p>
        }
    </div>
    <br />
    <div class="col-12">
        <h3 class="text-success">Product Table</h3>
        <table class="table table-striped">
            <tbody>
                @foreach(var prod in Products){
                    <tr>
                        <td><input type="text" @bind-value="prod.Name" @bind-value:event="oninput"></td>
                        <td><input type="number" @bind-value="prod.Price" @bind-value:event="oninput"></td>
                        <td><input type="checkbox" @bind-value="prod.IsActive" checked="prod.IsActive"></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="col-12">
        <h2>Product Summary</h2>
        @foreach(var prod in Products){
            <p>@prod.Name [@prod.Price] is @(@prod.IsActive ? "Active" : "InActive")</p>
        }
    </div>
</div>

@code {
    private string selectedProp = "";

    Product Product = new()
    {
        Id = 1,
        Name = "Rose Candle",
        IsActive = true,
        Price = 10.99,
        ProductProperties = new List<ProductProp>()
        {
            new ProductProp{ Id = 1, Key = "Color", Value = "Black" },
            new ProductProp{ Id = 1, Key = "Flavor", Value = "Rose Jasmine" },
            new ProductProp{ Id = 1, Key = "Size", Value = "20oz" }
        }
    };
    List<Product> Products = new();

    protected override void OnInitialized()
    {
        Products.Add(new() {
            Id = 1,
            Name = "Midnight Blazeß",
            IsActive = false,
            Price = 1110.99,
            ProductProperties = new () {
                new ProductProp { Id = 1, Key = "Flavor", Value = "Rose" },
                new ProductProp { Id = 2, Key = "Size", Value = "20oz" },
                new ProductProp { Id = 3, Key = "Color", Value = "Purple" }
            }
        });
        
        Products.Add(new() {
            Id = 2, 
            Name = "Blossom Lily",
            IsActive = true,
            Price = 13.99,
            ProductProperties = new () {
                new ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new ProductProp { Id = 3, Key = "Color", Value = "White" }
            }
        });
        
        base.OnInitialized();
    }
}
